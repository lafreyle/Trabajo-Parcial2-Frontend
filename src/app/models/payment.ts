export interface PaymentI {
    id?: number; // Optional: Unique identifier for the payment (primary key in database, might not be required if new payments are created automatically)
    payment_date: Date; // Required: The date when the payment was made
    amount: number; // Required: The amount of money paid
    status: string; // Required: The status of the payment (e.g., 'Completed', 'Pending', 'Failed')
    loan: number; // Required: The ID of the loan that the payment is associated with (foreign key referencing the Loan model)
    client: number; // Required: The ID of the client making the payment (foreign key referencing the Client model)
}

//id: An optional field that represents the unique identifier for the payment. It might be auto-generated by the system when creating new payments.
//payment_date: The date when the payment was made. It is crucial for tracking payment history and managing due dates.
//amount: The amount paid by the client. This is necessary for tracking the payment details and calculating remaining loan balance.
//status: The status of the payment, which indicates if the payment was successful, pending, or failed. This is important for the system to know the state of the transaction.
//loan: The loan associated with this payment. It is a foreign key that links to the Loan model, which ensures that the payment is recorded against the correct loan.
//client: The client making the payment. It is a foreign key that links to the Client model, allowing the system to identify which client made the payment.